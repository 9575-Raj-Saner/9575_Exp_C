import random

def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_win(board):
    # Check rows
    for row in board:
        if row.count('X') == 3 or row.count('O') == 3:
            return True
    # Check columns
    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] and (board[0][col] == 'X' or board[0][col] == 'O'):
            return True
    # Check diagonals
    if (board[0][0] == board[1][1] == board[2][2] and (board[0][0] == 'X' or board[0][0] == 'O')) or \
       (board[0][2] == board[1][1] == board[2][0] and (board[0][2] == 'X' or board[0][2] == 'O')):
        return True
    return False

def computer_move(board):
    # Check for possible wins
    for row in range(3):
        for col in range(3):
            if board[row][col] == ' ':
                # Simulate move
                board[row][col] = 'O'
                if check_win(board):
                    return
                else:
                    board[row][col] = ' '  # Undo move

    # Check for player's possible wins to block
    for row in range(3):
        for col in range(3):
            if board[row][col] == ' ':
                # Simulate move
                board[row][col] = 'X'
                if check_win(board):
                    board[row][col] = 'O'  # Block the player's win
                    return
                else:
                    board[row][col] = ' '  # Undo move

    # Use Magic Square strategy
    magic_square = [[2, 9, 4],
                    [7, 5, 3],
                    [6, 1, 8]]

    best_move = (None, None)
    best_score = -1

    for row in range(3):
        for col in range(3):
            if board[row][col] == ' ':
                score = magic_square[row][col]
                if score > best_score:
                    best_score = score
                    best_move = (row, col)

    row, col = best_move
    board[row][col] = 'O'

def player_move(board):
    while True:
        try:
            row = int(input("Enter row (1-3): ")) - 1
            col = int(input("Enter column (1-3): ")) - 1
            if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == ' ':
                board[row][col] = 'X'
                return
            else:
                print("Invalid move. Try again.")
        except ValueError:
            print("Invalid input. Please enter a number.")

def play_game():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    print("Welcome to Tic Tac Toe!")
    print("You are 'X'. Computer is 'O'.")
    print_board(board)

    while True:
        player_move(board)
        print_board(board)
        if check_win(board):
            print("Congratulations! You win!")
            break
        if all(' ' not in row for row in board):
            print("It's a draw!")
            break
        computer_move(board)
        print("Computer's move:")
        print_board(board)
        if check_win(board):
            print("Sorry, you lose!")
            break

if __name__ == "__main__":
    play_game()
